{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  datetimePicker: document.querySelector('#datetime-picker'),\n  startButton: document.querySelector('[data-start]'),\n  daysValue: document.querySelector('[data-days]'),\n  hoursValue: document.querySelector('[data-hours]'),\n  minutesValue: document.querySelector('[data-minutes]'),\n  secondsValue: document.querySelector('[data-seconds]'),\n};\n\nlet countdownInterval = null;\nlet userSelectedDate = null;\n\nrefs.startButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      refs.startButton.disabled = true;\n    } else {\n      refs.startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.datetimePicker, options);\n\nrefs.startButton.addEventListener('click', () => {\n  refs.startButton.disabled = true;\n  refs.datetimePicker.disabled = true;\n\n  if (countdownInterval) {\n    clearInterval(countdownInterval);\n  }\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeDiff = userSelectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(countdownInterval);\n      refs.datetimePicker.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n    refs.daysValue.textContent = addLeadingZero(days);\n    refs.hoursValue.textContent = addLeadingZero(hours);\n    refs.minutesValue.textContent = addLeadingZero(minutes);\n    refs.secondsValue.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["refs","countdownInterval","userSelectedDate","options","selectedDates","iziToast","flatpickr","timeDiff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAKA,MAAMA,EAAO,CACX,eAAgB,SAAS,cAAc,kBAAkB,EACzD,YAAa,SAAS,cAAc,cAAc,EAClD,UAAW,SAAS,cAAc,aAAa,EAC/C,WAAY,SAAS,cAAc,cAAc,EACjD,aAAc,SAAS,cAAc,gBAAgB,EACrD,aAAc,SAAS,cAAc,gBAAgB,CACvD,EAEA,IAAIC,EAAoB,KACpBC,EAAmB,KAEvBF,EAAK,YAAY,SAAW,GAE5B,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmB,IAAI,MACzBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDL,EAAK,YAAY,SAAW,IAE5BA,EAAK,YAAY,SAAW,EAE/B,CACH,EAEAM,EAAUN,EAAK,eAAgBG,CAAO,EAEtCH,EAAK,YAAY,iBAAiB,QAAS,IAAM,CAC/CA,EAAK,YAAY,SAAW,GAC5BA,EAAK,eAAe,SAAW,GAE3BC,GACF,cAAcA,CAAiB,EAGjCA,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAWL,EADL,IAAI,KAGhB,GAAIK,GAAY,EAAG,CACjB,cAAcN,CAAiB,EAC/BD,EAAK,eAAe,SAAW,GAC/B,MACD,CAED,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5DP,EAAK,UAAU,YAAca,EAAeL,CAAI,EAChDR,EAAK,WAAW,YAAca,EAAeJ,CAAK,EAClDT,EAAK,aAAa,YAAca,EAAeH,CAAO,EACtDV,EAAK,aAAa,YAAca,EAAeF,CAAO,CACvD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}